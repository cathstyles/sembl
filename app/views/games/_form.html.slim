= javascript_include_tag "views/search_edit"


= simple_form_for @game do |form|

  = form.error_notification
  = form.error :base

  = form.input :title
  = form.hidden_field :filter_content_by

  - if policy(@game).customise?
    = form.input :theme

    = form.input :description, label: "Description"
      = form.text_area :description

  - if @game.configurable?
    = form.association :board, collection: boards_for_select, as: :select

    = render partial: "seed_node", locals: {form: form}
  - if policy(@game).customise? 

    = form.input :allow_keyword_search, label: "Allow keyword search"
      = form.check_box :allow_keyword_search
  
    - if @game.draft?
      = form.input :invite_only, label: "Invite only"
        = form.check_box :invite_only

      = form.input :uploads_allowed, label: "Allow uploads", wrapper_html: {style: "display: none"}
        = form.check_box :uploads_allowed

      = invited_players_tag(form) do 
        label Invite players
        = form.simple_fields_for :players do |player_fields|
          = player_fields.error :base
          = render "player_fields", f: player_fields
      
      javascript:
        var toggle = function() {
          $("#searchEditContainer").toggle();
        }
      div
        a href="#" onClick="toggle();" filter
      #searchEditContainer style="display: none"
      javascript:
        var query = #{raw @game.filter_query.to_json}
        React.renderComponent(
          Sembl.SearchEdit({query: query}),
          document.getElementById('searchEditContainer')
        );
        


  - if @game.draft?
    = form.button :submit
    = form.button :submit, "Publish", name: 'publish'
  - else
    = form.button :submit